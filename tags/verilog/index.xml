<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Verilog on 隨寫日誌</title><link>https://yun-20459.github.io/tags/verilog/</link><description>Recent content in Verilog on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Sat, 18 Jun 2022 14:08:36 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/verilog/index.xml" rel="self" type="application/rss+xml"/><item><title>verilog 學習筆記</title><link>https://yun-20459.github.io/posts/verilog-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link><pubDate>Sat, 18 Jun 2022 14:08:36 +0000</pubDate><guid>https://yun-20459.github.io/posts/verilog-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid><description>基礎語法 module
1 2 3 module &amp;lt;module name&amp;gt;(&amp;lt;parameters&amp;gt;); // module content endmodule assign
1 assign out = in; gate
and &amp;amp; or | not ~ xor ^ wire
1 wire w1, w2, w3; 多進制表示
&amp;lt;位元長度&amp;gt; ’ &amp;lt;進制表示&amp;gt; &amp;lt;數值資料&amp;gt;
vector
1 2 3 4 5 // type [upper:lower] vector_name; output reg [0:0] y; // 1-bit reg that is also an output port (this is still a vector) input wire [3:-2] z; // 6-bit wire input (negative ranges are allowed) output [3:0] a; // 4-bit output wire.</description></item></channel></rss>