<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BIT on 隨寫日誌</title><link>https://yun-20459.github.io/tags/bit/</link><description>Recent content in BIT on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Sun, 18 Sep 2022 19:18:46 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/bit/index.xml" rel="self" type="application/rss+xml"/><item><title>CSES List Removals</title><link>https://yun-20459.github.io/posts/cses-list-removals/</link><pubDate>Sun, 18 Sep 2022 19:18:46 +0000</pubDate><guid>https://yun-20459.github.io/posts/cses-list-removals/</guid><description>題目 給定一個長度為 $n$ 的序列 $a$，給 $n$ 個詢問，對於每個詢問 $pos$，輸出位置為 $pos$ 的值並從序列中刪除。
作法 這題的技巧要用到「BIT 上二分搜」，可以想像如果一個數字還沒有被刪除，我們就將它的 presentation 記為 $1$，反之則為 $0$，那麼查詢位置在 $pos$ 的元素等於就是查找前綴和為 $pos$，且 presentation = 1 的位置。
至於二分搜要怎麼實作呢，BIT 的節點是根據 2 的冪次劃分的，所以每次可以嘗試擴展 2 的冪次，看現在的前綴和是不是小於詢問，如果是的話代表可以擴展。等於說我們在找 $\sum_{i = 1}^x presentation[i] &amp;lt; pos$ 的 $x$，如果現在的和還比詢問小的話就可以擴展。所以一路這樣擴展下去之後，我們會找到最大的 $x$ 符合上式，那麼 $x + 1$ 就是答案。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 #include &amp;lt;bits/stdc++.</description></item></channel></rss>