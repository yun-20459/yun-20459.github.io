<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Js on 隨寫日誌</title><link>https://yun-20459.github.io/tags/js/</link><description>Recent content in Js on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Tue, 12 Jul 2022 13:23:03 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/js/index.xml" rel="self" type="application/rss+xml"/><item><title>frontend 學習筆記 - organizing js</title><link>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-organizing-js/</link><pubDate>Tue, 12 Jul 2022 13:23:03 +0000</pubDate><guid>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-organizing-js/</guid><description>creating object 定義物件的時候用 object literal syntax 較好，這個的意思是把 property 跟 value 用類似 array 的方式來寫，例如說
1 2 3 4 5 6 7 const myObject = { property: &amp;#39;Value!&amp;#39;, otherProperty: 77, &amp;#34;obnoxious property&amp;#34;: function() { // do stuff! } } 可以用 dot notation 或者 bracket notation 拿資料
1 2 3 4 5 // dot notation myObject.property // &amp;#39;Value!&amp;#39; // bracket notation myObject[&amp;#34;obnoxious property&amp;#34;] // [Function] function 定義在 prototype 比較好，不然每 new 一個 object 出來就會複製一次</description></item><item><title>frontend 學習筆記 - js</title><link>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-js/</link><pubDate>Sun, 26 Jun 2022 15:05:15 +0000</pubDate><guid>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-js/</guid><description>寫在網頁裡的方法 1 2 3 4 5 6 7 8 9 10 11 12 13 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Page Title&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script&amp;gt; // Your JavaScript goes here! console.log(&amp;#34;Hello, World!&amp;#34;) &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 或者
1 &amp;lt;script src=&amp;#34;javascript.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; Variable 宣告 let 是一般變數，const是常數變數
用駝峰式命名法（const 的話全部大寫）
- 不應該出現在命名中，無意義的變數可以用 $ 或者 _
不要把變數都宣告在同一行
可以用科學記號賦值
integer 精度只到 15 位數
1 2 let x = 999999999999999; // x will be 999999999999999 let y = 9999999999999999; // y will be 10000000000000000 string method Extract string part slice: 區間是左閉右開</description></item></channel></rss>