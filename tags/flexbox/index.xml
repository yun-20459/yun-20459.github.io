<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flexbox on 隨寫日誌</title><link>https://yun-20459.github.io/tags/flexbox/</link><description>Recent content in Flexbox on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Sat, 25 Jun 2022 13:10:13 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/flexbox/index.xml" rel="self" type="application/rss+xml"/><item><title>frontend 學習筆記 - flexbox</title><link>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-flexbox/</link><pubDate>Sat, 25 Jun 2022 13:10:13 +0000</pubDate><guid>https://yun-20459.github.io/posts/frontend-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-flexbox/</guid><description>flexbox 是什麼 應該是個切版好工具？大概的功能是讓 element 可以併排，而不是 stacking 或者 centering。 例子可以看 這裡
分類 flex container flex item 外容器 在 flex container 中的 item display, flex-flow(direction &amp;amp; wrap), justify-content, align-items flex, order, align-self flex item 也可以同時作為 flex container！ flex container display 可以用 display: flex; 或 display: inline-flex;，後者是類似 inline-block + flex。
flex-flow axes
設定 main axis 跟 cross axis，這兩個東西是相對的。 ex. flex-direction: row 就是讓 main axis 是水平的，也就是說會讓 item 水平排列。
default 是 row，如果變成 column 的話，flex-basis 會看 height 而不是 width。</description></item></channel></rss>