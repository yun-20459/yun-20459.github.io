<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Google on 隨寫日誌</title><link>https://yun-20459.github.io/tags/google/</link><description>Recent content in Google on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Fri, 17 Jun 2022 00:16:03 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/google/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Android Study Jam 學習筆記(6)</title><link>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-6/</link><pubDate>Fri, 17 Jun 2022 00:16:03 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-6/</guid><description>學習範圍 單元 5、單元 6、Jetpack
SQL 語法 statement
1 2 3 SELECT name FROM park WHERE type != &amp;#34;recreation_area&amp;#34; AND area_acres &amp;gt; 100000 function
1 2 3 4 SELECT COUNT(*) FROM park SELECT SUM(park_visitors) FROM park SELECT MAX(area_acres) FROM park SELECT COUNT(DISTINCT type) FROM park ordering &amp;amp; grouping
1 2 3 4 5 6 7 /* sort by descending order*/ SELECT name FROM park ORDER BY name DESC /* see how many parks of each type are present, and get a separate count for each.</description></item><item><title>Google Android Study Jam 學習筆記(5)</title><link>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-5/</link><pubDate>Wed, 15 Jun 2022 19:56:39 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-5/</guid><description>學習範圍 單元 4
Kotlin 語法 thread
runBlocking{}、.async() lazy instantiation
@Json Annotation
let
將最後一行帶到下一個 chain 或是回傳 Scope Function Android Studio debugger</description></item><item><title>Google Android Study Jam 學習筆記(4)</title><link>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-4/</link><pubDate>Tue, 14 Jun 2022 18:37:11 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-4/</guid><description>學習範圍 單元 3 課程 2~5
Android Studio fragment
一種可以重複利用的 UI -
Navigation
NavHostFragment: container for destinations NavController: conducts navigation NavigationView: menu of drawerlayout NavigationUI: update content outside NavHostFragment Navgraph
app 中導覽的對應 ex. 從 Home -&amp;gt; Setting 結構準則
separation of concerns driving UI from a model main classes / components in Android architecture: UI Controller (activity/fragment), ViewModel, LiveData and Room SlidingPaneLayout</description></item><item><title>Google Android Study Jam 學習筆記(3)</title><link>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-3/</link><pubDate>Mon, 13 Jun 2022 21:57:59 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-3/</guid><description>學習範圍 單元 3 課程 1
Kotlin 語法 Set
1 2 3 val tmp = &amp;lt;list&amp;gt;.toSet() val set1 = setOf(1,2,3) val set2 = mutableSetOf(3,2,1) 可以用 contains()、intersect()、union()
Map
1 2 3 4 5 6 7 8 9 10 11 12 fun main() { val peopleAges = mutableMapOf&amp;lt;String, Int&amp;gt;( &amp;#34;Fred&amp;#34; to 30, &amp;#34;Ann&amp;#34; to 23 ) peopleAges.put(&amp;#34;Barbara&amp;#34;, 42) peopleAges[&amp;#34;Joe&amp;#34;] = 51 val filteredNames = peopleAges.filter { it.key.length &amp;lt; 4 } println(peopleAges.map { &amp;#34;${it.key} is ${it.</description></item><item><title>Google Android Study Jam 學習筆記(2)</title><link>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-2/</link><pubDate>Sat, 11 Jun 2022 12:30:51 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-android-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-2/</guid><description>學習範圍 單元 2 課程 3
Kotlin 語法 list
list
宣告 1 val numbers: List&amp;lt;Int&amp;gt; = listOf(1, 2, 3, 4, 5, 6) 其他 1 2 3 4 5 6 7 8 9 println(&amp;#34;List: $numbers&amp;#34;) // = println(&amp;#34;List: &amp;#34; + numbers) println(&amp;#34;Size: ${numbers.size}&amp;#34;) println(&amp;#34;First element: ${numbers[0]}&amp;#34;) println(&amp;#34;First: ${numbers.first()}&amp;#34;) println(&amp;#34;Last: ${numbers.last()}&amp;#34;) println(&amp;#34;Contains 4? ${numbers.contains(4)}&amp;#34;) // true println(&amp;#34;Contains 7? ${numbers.contains(7)}&amp;#34;) // false println(&amp;#34;Reversed list: ${colors.reversed()}&amp;#34;) println(&amp;#34;Sorted list: ${colors.sorted()}&amp;#34;) mutablelist
宣告 1 val entrees = mutableListOf&amp;lt;String&amp;gt;() // val entrees: MutableList&amp;lt;String&amp;gt; = mutableListOf() 其他 1 2 3 4 5 6 7 println(&amp;#34;Add noodles: ${entrees.</description></item><item><title>Google Andriod Study Jam 學習筆記(1)</title><link>https://yun-20459.github.io/posts/google-andriod-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-1/</link><pubDate>Fri, 10 Jun 2022 21:10:46 +0000</pubDate><guid>https://yun-20459.github.io/posts/google-andriod-study-jam-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-1/</guid><description>學習範圍 單元 1 ~ 單元 2 課程 2
Kotlin 語法 函式
1 2 3 fun &amp;lt;function name&amp;gt; : &amp;lt;return type&amp;gt; { } 輸出
1 2 println(&amp;#34;Hi&amp;#34;) // 有換行 print(&amp;#34;Hi&amp;#34;) // 沒換行 宣告變數
1 2 val &amp;lt;variable name&amp;gt; = &amp;lt;variable value&amp;gt; val &amp;lt;variable name&amp;gt; = &amp;lt;class name&amp;gt;(parameter) 迴圈
1 2 3 repeat (&amp;lt;times&amp;gt;) { } class
1 2 3 4 5 6 class &amp;lt;class name&amp;gt; (val &amp;lt;variable name&amp;gt;: &amp;lt;variable type&amp;gt;, ...) { val &amp;lt;variable name&amp;gt; = &amp;lt;variable type&amp;gt; fun &amp;lt;function name&amp;gt; { } } inherit</description></item></channel></rss>