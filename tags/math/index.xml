<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Math on 隨寫日誌</title><link>https://yun-20459.github.io/tags/math/</link><description>Recent content in Math on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Mon, 03 Oct 2022 22:39:07 +0000</lastBuildDate><atom:link href="https://yun-20459.github.io/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>CSES Josephus Queries</title><link>https://yun-20459.github.io/posts/cses-josephus-queries/</link><pubDate>Mon, 03 Oct 2022 22:39:07 +0000</pubDate><guid>https://yun-20459.github.io/posts/cses-josephus-queries/</guid><description>題目 給 $n$ 個圍成一圈的小孩，每 2 個人就移掉 2 個人中的第二個，問第 $k$ 個小孩被移掉的編號
作法 這題網路上有很多題解，我看的懂 tutorial 但實作都看不懂所以寫一下。 ps 是我隊友教我的她好棒
因為圍成一圈，所以說我們可以把要移掉的數目看成是 $\frac{n + 1}{2}$，這樣一來如果 $n$ 是奇數，被移掉的就會是所有的偶數跟 1，反之則是移掉所有的偶數。
那麼遞迴下去做的話，可以看成是把該移掉的人移掉之後重新編號成 1, 2, 3, &amp;hellip;，再把 index remap 回來，所以這時候就要看原本是奇數還是偶數來決定怎麼 remap。
舉例來說，如果 $n$ 是奇數，那第一輪拿完會變成 3, 5, 7, &amp;hellip;, n，這樣重新編號成 1, 2, 3, &amp;hellip;，就要 $2 \times \text{id} + 1$ remap 回來。如果 $n$ 是偶數的話，那第一輪拿完會變成 1, 3, 5, 7, &amp;hellip;, n，這樣重新編號成 1, 2, 3, &amp;hellip;，就要 $2 \times \text{id} - 1$ remap 回來。</description></item><item><title>Codeforces 986B. Petr and Permutations</title><link>https://yun-20459.github.io/posts/codeforces-986b-petr-and-permutations/</link><pubDate>Fri, 22 Jul 2022 13:54:14 +0000</pubDate><guid>https://yun-20459.github.io/posts/codeforces-986b-petr-and-permutations/</guid><description>題目 有一個陣列 ${1, 2, &amp;hellip;, N}, (N \leq 10^6)$，Petr 喜歡對序列執行 $3n$ 次任取兩個數字交換的操作，Um_nik 喜歡做 $7n + 1$ 次，給定一個操作後的陣列，求是誰操作的。
作法 把 index 跟陣列數值想成是圖中有連接的點的話，一開始未操作的陣列會有 $n$ 個自環，每一次操作會增加或減少一個環，由 $3n$ 跟 $7n + 1$ 的奇偶性不同可以判斷是誰操作的。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include &amp;lt;bits/stdc++.</description></item><item><title>Leetcode 96. Unique Binary Search Trees</title><link>https://yun-20459.github.io/posts/leetcode-96-unique-binary-search-trees/</link><pubDate>Sat, 12 Feb 2022 19:13:27 +0000</pubDate><guid>https://yun-20459.github.io/posts/leetcode-96-unique-binary-search-trees/</guid><description>忘記數學了所以來複習一下 :p
題目 link
作法 如果假設有 $n$ 個節點的二元樹有 $G_n$ 個，其中以 $i$ 節點為根的數目有 $F_i$ 個，那麼
$$ G_n = F_1 + F_2 + &amp;hellip; + F_n$$
根據二元樹的定義，根節點一定大於左節點小於右節點，所以以 $i$ 節點為根的二元樹可以看成是 由 $1$ 到 $i - 1$ 構成的左子樹 加上 由 $i + 1$ 到 $n$ 構成的右子樹，也就是說
$$F_i = G_{i - 1} * G_{n - i}$$
所以遞迴式就跑出來了
$$G_n = G_0 * G_{n - 1} + G_1 * G_{n - 2} + &amp;hellip; + G_{n - 1} * G_0$$</description></item></channel></rss>